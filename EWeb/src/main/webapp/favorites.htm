<!DOCTYPE HTML>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<script type="text/javascript" src="js/reactjs_0.13.0/JSXTransformer.js"></script>
<script type="text/javascript" src="js/reactjs_0.13.0/react.js"></script>
<script type="text/javascript" src="js/jquery_1.8.2/jquery.min.js"></script>
<script type="text/javascript" src="js/easystogu/requestForecastData.js"></script>
<script type="text/javascript" src="js/easystogu/requestStockData.js"></script>
<script type="text/javascript" src="js/easystogu/common.js"></script>
<script type="text/javascript" src="js/easystogu/createChart.js"></script>
<script type="text/javascript" src="js/3pp/moment.min.js"></script>
<style type="text/css">
${demo.css}
</style>
</head>
<body>
	<!--add point button-->
	<script type="text/jsx">    
          var stockId = "999999";
          var indicator = "shenxian_sell";
          var dateFrom = moment().subtract(2000, 'days').format("YYYY-MM-DD");
          var dateTo = moment().format("YYYY-MM-DD");
          var selectDate = dateTo;
          var selectStockIds = [];
          var version = "v1";
  
	      var ParmForm = React.createClass({
	         getInitialState: function() {
	         return {
	            stockId: "999999",
	            indicator: "shenxian_sell",
                version: "v1",
	            dateFrom: moment().subtract(2000, 'days').format("YYYY-MM-DD"),
	            dateTo: moment().format("YYYY-MM-DD"),
                selectDate: "",
                dateOptions: [],
                stockIdOptions: []
	        };
	      },
	      
	      handleChange: function(e) {
	         var newState = {};
	         newState[e.target.name] = e.target.value;
	         this.setState(newState);

             //update stockIds based on selectDate
             $.ajaxSettings.async = false;
             selectDate = e.target.value;
             selectStockIds = getAllStockIdsFromView("luzao_phaseIII_zijinliu_top300_Details?date="+selectDate);
             this.state.stockIdOptions = [];
             for (var i = 0; i < selectStockIds.length; i++) {
                 this.state.stockIdOptions.push(
                 <option value={selectStockIds[i].stockId}>{selectStockIds[i]}</option>
                );
             }
             //set the selected stockId to first one
             stockId = selectStockIds[0].stockId;
             //alert(stockId);
             $.ajaxSettings.async = true;
	      },

          handleChange2: function(e) {
	         var newState = {};
	         newState[e.target.name] = e.target.value;
	         this.setState(newState);
        
             //update the stockId to selected value
             stockId=e.target.value;
             //loadShenXianSell(version, stockId, dateFrom, dateTo);
	      },
	
	      handleClick: function() {
	         var data = {
	            stockId : this.state.stockId,
	            indicator : this.state.indicator,
                version: this.state.version, 
	            dateFrom : this.state.dateFrom,
	            dateTo : this.state.dateTo,
	        };
	        
            indicator = data.indicator;
            dateFrom = data.dateFrom;
            dateTo = data.dateTo;
            //stockId = data.stockId;
	        
            if(data.indicator == "shenxian"){ 
	           loadShenXian(data.version, stockId, data.dateFrom, data.dateTo);
            }else if(data.indicator == "shenxian_sell"){ 
	           loadShenXianSell(data.version, stockId, data.dateFrom, data.dateTo);
            }else if(data.indicator == "luzao"){ 
	           loadLuZao(data.version, stockId, data.dateFrom, data.dateTo);
            }else if(data.indicator == "boll"){ 
	           loadBoll(data.version, stockId, data.dateFrom, data.dateTo);
            }else if(data.indicator == "macd"){ 
	           loadMacd(data.version, stockId, data.dateFrom, data.dateTo);
            }else if(data.indicator == "qsdd"){ 
	           loadQSDD(data.version, stockId, data.dateFrom, data.dateTo);
            }
	      },
	      
	      render: function(){

            //first option is empty
            this.state.dateOptions = [];
            for (var i = 0; i <= 12; i++) {
                 var tmpDate= moment().subtract(i, 'days').format("YYYY-MM-DD");
                 this.state.dateOptions.push(
                 <option value={tmpDate}>{tmpDate}</option>
                );
            }
			      return (<div>
                              <label>RecentDate:</label>
			                  <select name='selectDate' onChange={this.handleChange}>
                              {this.state.dateOptions}
                              </select>&nbsp;&nbsp;

                              <label>StockIds:</label>
			                  <select name='selectStockId' onChange={this.handleChange2}>
                              {this.state.stockIdOptions}
                              </select>&nbsp;&nbsp;

			                  <label>StockId:</label>
			                  <input type="text" value={stockId} name='stockId' maxLength="6" onChange={this.handleChange} />&nbsp;&nbsp;
			                  
                              <label>Indicator:</label>
			                  <select name='indicator' onChange={this.handleChange}>
                              <option value='shenxian_sell' defaultValue>shenxian_sell</option>
                              <option value='shenxian'>shenxian</option>
                              <option value='luzao'>luzao</option>
                              <option value='macd'>macd</option>
                              <option value='boll'>boll</option>
                              <option value='qsdd'>qsdd</option>
                              </select>&nbsp;&nbsp;

                              <label>Version:</label>
			                  <select name='version' onChange={this.handleChange}>
                              <option value='v0'>v0-不复权</option>
                              <option value='v1'>v1-前复权</option>
                              <option value='v2' defaultValue>v2-后复权</option>
                              </select>&nbsp;&nbsp;

			                  <label>DateFrom:</label>
			                  <input type="text" value={this.state.dateFrom} name='dateFrom' maxLength="10" onChange={this.handleChange} />&nbsp;&nbsp;
			                  
                              <label>DateTo:</label>
			                  <input type="text" value={this.state.dateTo} name='dateTo' maxLength="10" onChange={this.handleChange} />&nbsp;&nbsp;
			                  
                              <input type="submit" value="Submit" onClick={this.handleClick} />
			              </div>
			              );
			     }         
	      });
	      
	      React.render(<ParmForm />,
	      document.getElementById("containerForm")
	      );
      </script>

	<script type="text/javascript" src="js/highstock_4.2.1/highstock.js"></script>
	<script type="text/javascript"
		src="js/highstock_4.2.1/modules/exporting.js"></script>
	<div>
		<div id="forecastForm"></div>
		<div id="containerForm"></div>
		<div id="trendmodePopupForm"></div>
		<div id="container" style="height: 800px; min-width: 310px"></div>
	</div>
</body>
</html>