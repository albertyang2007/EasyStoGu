<!DOCTYPE HTML>
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
      <script type="text/javascript" src="js/reactjs_0.13.0/JSXTransformer.js"></script>
      <script type="text/javascript" src="js/reactjs_0.13.0/react.js"></script>
      <script type="text/javascript" src="js/jquery_1.8.2/jquery.min.js"></script>
      <script type="text/javascript" src="js/easystogu/loadStockData.js"></script>
      <script type="text/javascript" src="js/easystogu/sendStockData.js"></script>
      <style type="text/css">
        ${demo.css}
	  </style>
   </head>
   <body>
      <!--add point button-->   
      <script type="text/jsx">
          var stockId = "999999";
          var indicator = "shenxian";

	      var ForecastForm = React.createClass({
	         getInitialState: function() {
	         return {
	            stockId: "999999",
	            date_01_high : "0.0",
	            date_01_close: "0.0",
	            date_01_open : "0.0",
	            date_01_low  : "0.0",
	        };
	      },
	      
	      handleChange: function(e) {
	         var newState = {};
	         newState[e.target.name] = e.target.value;
	         this.setState(newState);
	      },
	
	      handleClick: function() {
	         var data = {
	            date_01_high  : this.state.date_01_high,
	            date_01_close : this.state.date_01_close,
	            date_01_open  : this.state.date_01_open,
	            date_01_low   : this.state.date_01_low,
	        };	        
			    
            $.ajaxSettings.async = false;

            var trendModePrices = loadTrendMode('TestName');

            $.ajaxSettings.async = true;

			postStockPrice(stockId, '2014-10-01', '2016-12-31', trendModePrices);
	      },
	      
	      render: function(){
			      return (<div>
			                  <label>Date 01 Low:</label>
			                  <input type="text" value={this.state.date_01_low} name='date_01_low' maxLength="6" onChange={this.handleChange} />&nbsp;&nbsp;
			                  <label>Open:</label>
			                  <input type="text" value={this.state.date_01_open} name='date_01_open' maxLength="6" onChange={this.handleChange} />&nbsp;&nbsp;
			                  <label>Close:</label>			                  
			                  <input type="text" value={this.state.date_01_close} name='date_01_close' maxLength="6" onChange={this.handleChange} />&nbsp;&nbsp;
			                  <label>High:</label>
			                  <input type="text" value={this.state.date_01_high} name='date_01_high' maxLength="6" onChange={this.handleChange} />&nbsp;&nbsp;
                        <input type="submit" value="Submit" onClick={this.handleClick} />
			              </div>
			              );
			     }         
	      });
	      
	      React.render(<ForecastForm />,
	      document.getElementById("forecastForm")
	      );

      
	      var ParmForm = React.createClass({
	         getInitialState: function() {
	         return {
	            stockId: "999999",
	            indicator: "shenxian",
              version: "v1",
	            dateFrom:"2012-10-01",
	            dateTo:"2016-12-31",
	        };
	      },
	      
	      handleChange: function(e) {
	         var newState = {};
	         newState[e.target.name] = e.target.value;
	         this.setState(newState);
	      },
	
	      handleClick: function() {
	         var data = {
	            stockId : this.state.stockId,
	            indicator : this.state.indicator,
                version: this.state.version, 
	            dateFrom : this.state.dateFrom,
	            dateTo : this.state.dateTo,
	        };
	        
            stockId = data.stockId;
            indicator = data.indicator;

            // set ajax async to false just to query the stock company info
            $.ajaxSettings.async = false;

            // convert the stock name to sotckId if input parm is not a stockId
            var stockIdRegex = new RegExp('[0-9]{6}','g');
            if(!data.stockId.match(stockIdRegex)){
            	 var companyInfo = loadCompanyInfoByName(data.stockId);
               data.stockId = companyInfo.stockId;
            }

            //reset ajax async to true when load big data from portal
            $.ajaxSettings.async = true;
	        
            if(data.indicator == "shenxian"){ 
	           loadShenXian(data.version, data.stockId, data.dateFrom, data.dateTo);
            }else if(data.indicator == "luzao"){ 
	           loadLuZao(data.version, data.stockId, data.dateFrom, data.dateTo);
            }else if(data.indicator == "boll"){ 
	           loadBoll(data.version, data.stockId, data.dateFrom, data.dateTo);
            }else if(data.indicator == "macd"){ 
	           loadMacd(data.version, data.stockId, data.dateFrom, data.dateTo);
            }else if(data.indicator == "qsdd"){ 
	           loadQSDD(data.version, data.stockId, data.dateFrom, data.dateTo);
            }
	      },
	      
	      render: function(){
			      return (<div>
			                  <label>StockId:</label>
			                  <input type="text" value={this.state.stockId} name='stockId' maxLength="6" onChange={this.handleChange} />&nbsp;&nbsp;
			                  
                              <label>Indicator:</label>
			                  <select name='indicator' onChange={this.handleChange}>
                              <option value='shenxian' defaultValue>shenxian</option>
                              <option value='luzao'>luzao</option>
                              <option value='macd'>macd</option>
                              <option value='boll'>boll</option>
                              <option value='qsdd'>qsdd</option>
                              </select>&nbsp;&nbsp;

                              <label>Version:</label>
			                  <select name='version' onChange={this.handleChange}>
                              <option value='v1' defaultValue>v1-Query From DB</option>
                              <option value='v2'>v2-Count RealTime</option>
                              </select>&nbsp;&nbsp;

			                  <label>DateFrom:</label>
			                  <input type="text" value={this.state.dateFrom} name='dateFrom' maxLength="10" onChange={this.handleChange} />&nbsp;&nbsp;
			                  
                              <label>DateTo:</label>
			                  <input type="text" value={this.state.dateTo} name='dateTo' maxLength="10" onChange={this.handleChange} />&nbsp;&nbsp;
			                  
                              <input type="submit" value="Submit" onClick={this.handleClick} />
			              </div>
			              );
			     }         
	      });
	      
	      React.render(<ParmForm />,
	      document.getElementById("containerForm")
	      );
      </script>      
      
      <script type="text/javascript" src="js/highstock_4.2.1/highstock.js"></script>
      <script type="text/javascript" src="js/highstock_4.2.1/modules/exporting.js"></script>
      <div>
        <div id="forecastForm"></div>
        <div id="containerForm"></div>
        <div id="container" style="height: 600px; min-width: 310px"></div>
      </div>  
   </body>
</html>